function SquareGame.new 0
push constant 0
call Memory.alloc 1
pop pointer 0
push constant 0
push constant 0
push constant 30
call Square.new 3
pop this 0
push constant 0
pop this 1
push pointer 0
return
function SquareGame.dispose 0
push argument 0
pop pointer 0
push this 0
call square.dispose 1
push pointer 0
call Memory.deAlloc 1
return
function SquareGame.moveSquare 0
push argument 0
pop pointer 0
push this 1
push constant 1
eq
if-goto ELSE6
push this 0
call square.moveUp 1
goto ENDIF6
label ELSE6
label ENDIF6
push this 1
push constant 2
eq
if-goto ELSE7
push this 0
call square.moveDown 1
goto ENDIF7
label ELSE7
label ENDIF7
push this 1
push constant 3
eq
if-goto ELSE8
push this 0
call square.moveLeft 1
goto ENDIF8
label ELSE8
label ENDIF8
push this 1
push constant 4
eq
if-goto ELSE9
push this 0
call square.moveRight 1
goto ENDIF9
label ELSE9
label ENDIF9
push constant 5
call Sys.wait 1
return
function SquareGame.run 0
push argument 0
pop pointer 0
push constant 0
pop local 3
label WHILE0
push local 3
not
if-goto WHILE_END0
label WHILE1
push local 2
push constant 0
eq
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 2
call moveSquare 0
goto WHILE1
label WHILE_END1
push local 2
push constant 81
eq
if-goto ELSE10
push constant 0
not
pop local 3
goto ENDIF10
label ELSE10
label ENDIF10
push local 2
push constant 90
eq
if-goto ELSE11
push this 0
call square.decSize 1
goto ENDIF11
label ELSE11
label ENDIF11
push local 2
push constant 88
eq
if-goto ELSE12
push this 0
call square.incSize 1
goto ENDIF12
label ELSE12
label ENDIF12
push local 2
push constant 131
eq
if-goto ELSE13
push constant 1
pop this 1
goto ENDIF13
label ELSE13
label ENDIF13
push local 2
push constant 133
eq
if-goto ELSE14
push constant 2
pop this 1
goto ENDIF14
label ELSE14
label ENDIF14
push local 2
push constant 130
eq
if-goto ELSE15
push constant 3
pop this 1
goto ENDIF15
label ELSE15
label ENDIF15
push local 2
push constant 132
eq
if-goto ELSE16
push constant 4
pop this 1
goto ENDIF16
label ELSE16
label ENDIF16
label WHILE2
push local 2
push constant 0
eq
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 2
call moveSquare 0
goto WHILE2
label WHILE_END2
goto WHILE0
label WHILE_END0
return
